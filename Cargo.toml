[package]
name = "transient"
version = "0.4.0"
description = "Reimplementation of `std::any::Any` with support for non-`'static` types"
authors = ["Joshua Rudolph <jrrudolph93@gmail.com>"]
readme = "README.md"
keywords = ["any", "static", "downcast", "typeid"]
homepage = "https://github.com/JRRudy1/transient"
repository = "https://github.com/JRRudy1/transient"
documentation = "https://docs.rs/transient"
license = "MIT OR Apache-2.0"
exclude = ["/.gitignore"]
edition = "2021"
rust-version = "1.56"

[lib]
doctest = true

[workspace]
members = ["derive"]

[dependencies]
rustversion = "1.0"

transient-derive = { path = "derive", version = "0.4", optional = true }
ndarray = { version = "0.15", optional = true }
numpy = { version = "0.21", optional = true }
pyo3 = { version = ">=0.21", optional = true }
uuid = { version = "1", optional = true }
either = { version = ">=1", default-features = false, optional = true }

[dev-dependencies]
trybuild = { version = "1.0", features = ["diff"] }

[features]
default = ["derive"]

# Provides a `derive` macro for implementing the `Transient` trait
derive = ["transient-derive"]

# Provides `Transient` implementations for `ndarray` types
ndarray = ["dep:ndarray"]

# Provides `Transient` implementations for `pyo3` types
pyo3 = ["dep:pyo3"]

# Provides `Transient` implementations for `numpy` types
numpy = ["dep:numpy", "pyo3"]

# Provides `Transient` implementations for `uuid` types
uuid = ["dep:uuid"]

# Provides `Transient` implementations for `either` types
either = ["dep:either"]

[workspace.lints.clippy]
let_unit_value = "warn"
manual_assert = "warn"
unnecessary_wraps = "warn"

[workspace.lints.rust]
elided_lifetimes_in_paths = "warn"
invalid_doc_attributes = "warn"
unused_lifetimes = "warn"

[workspace.lints.rustdoc]
broken_intra_doc_links = "warn"
bare_urls = "warn"
